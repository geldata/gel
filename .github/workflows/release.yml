name: Build Test and Publish a Release

on:
  workflow_dispatch:
    inputs: {}

jobs:
  prep:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

  publish-docker:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        repository: geldata/gel-docker
        ref: master
        path: dockerfile

    - name: Login to Docker Hub
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        registry: ghcr.io
        username: "edgedb-ci"
        password: ${{ secrets.GITHUB_CI_BOT_TOKEN }}

    - env:
        VERSION_SLOT: "6"
        VERSION_CORE: "6.5"
        CATALOG_VERSION: ""
        PKG_SUBDIST: ""
      id: tags
      run: |
        set -e

        url='https://registry.hub.docker.com/v2/repositories/geldata/gel/tags?page_size=100'
        repo_tags=$(
          while [ -n "$url" ]; do
            resp=$(curl -L -s "$url")
            url=$(echo "$resp" | jq -r ".next")
            if [ "$url" = "null" ] || [ -z "$url" ]; then
              break
            fi
            echo "$resp" | jq -r '."results"[]["name"]'
          done | grep "^[[:digit:]]\+.*" | grep -v "alpha\|beta\|rc" || :
        )

        tags=()

        if [ "$PKG_SUBDIST" = "nightly" ]; then
          tags+=(
            "nightly"
            "nightly_${VERSION_SLOT}_cv${CATALOG_VERSION}"
          )
        else
          tags+=( "$VERSION_CORE" )

          top=$(printf "%s\n%s\n" "$VERSION_CORE" "$repo_tags" \
                | grep "^${VERSION_SLOT}[\.-]" \
                | sort --version-sort --reverse | head -n 1)
          if [ "$top" == "$VERSION_CORE" ]; then
            tags+=( "$VERSION_SLOT" )
          fi

          if [ -z "$PKG_SUBDIST" ]; then
            top=$(printf "%s\n%s\n" "$VERSION_CORE" "$repo_tags" \
                  | sort --version-sort --reverse | head -n 1)
            if [ "$top" == "$VERSION_CORE" ]; then
              tags+=( "latest" )
            fi
          fi
        fi

        fq_tags=()
        images=("geldata/gel" "ghcr.io/geldata/gel")

        for image in "${images[@]}"; do
          fq_tags+=("${tags[@]/#/${image}:}")
        done

        IFS=,
        echo "tags=${fq_tags[*]}" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

    - name: Build and Publish Docker Image
      uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.10.0
      with:
        push: true
        provenance: mode=max
        tags: "${{ steps.tags.outputs.tags }}"
        context: dockerfile
        build-args: |
          version=6
          exact_version=6.5
        platforms: linux/amd64,linux/arm64

